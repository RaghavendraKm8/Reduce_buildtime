pipeline {
  agent any
  environment {
    GOPROXY     = 'https://proxy.golang.org,direct'
    GOMODCACHE  = "${WORKSPACE}/.gomodcache"   // persist across builds
    GOCACHE     = "${WORKSPACE}/.gocache"
    CGO_ENABLED = '0'
  }
  stages {
    stage('Checkout') { steps { checkout scm } }
    stage('Deps (cache warm)') {
      steps {
        sh '''
          mkdir -p "$GOMODCACHE" "$GOCACHE"
          go version
          go mod download
        '''
      }
    }
    stage('Build (app only)') {
      steps {
        sh 'go build -trimpath -ldflags="-s -w" -o bin/myapp ./cmd/myapp'
      }
    }
    stage('Unit tests') { steps { sh 'go test ./...' } }
    stage('Archive binary') {
      steps { archiveArtifacts artifacts: 'bin/myapp', fingerprint: true }
    }
  }
}
